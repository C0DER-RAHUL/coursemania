{"ast":null,"code":"import { server } from '../store';\nimport axios from 'axios';\nexport const updateProfile = (name, email) => async dispatch => {\n  try {\n    dispatch({\n      type: 'updateProfileRequest'\n    });\n    const {\n      data\n    } = await axios.put(`${server}/updateprofile`, {\n      name,\n      email\n    }, {\n      headers: {\n        'Content-type': 'application/json'\n      },\n      withCredentials: true\n    });\n    dispatch({\n      type: 'updateProfileSuccess',\n      payload: data.message\n    });\n  } catch (error) {\n    dispatch({\n      type: 'updateProfileFail',\n      payload: error.response.data.message\n    });\n  }\n};\nexport const updateProfilePicture = formdata => async dispatch => {\n  try {\n    dispatch({\n      type: 'updateProfilePictureRequest'\n    });\n    const {\n      data\n    } = await axios.put(`${server}/updateprofilepicture`, formdata, {\n      headers: {\n        'Content-type': 'multipart/form-data'\n      },\n      withCredentials: true\n    });\n    dispatch({\n      type: 'updateProfilePictureSuccess',\n      payload: data.message\n    });\n  } catch (error) {\n    dispatch({\n      type: 'updateProfilePictureFail',\n      payload: error.response.data.message\n    });\n  }\n};\nexport const changePassword = (oldPassword, newPassword) => async dispatch => {\n  try {\n    dispatch({\n      type: 'changePasswordRequest'\n    });\n    const {\n      data\n    } = await axios.put(`${server}/changepassword`, {\n      oldPassword,\n      newPassword\n    }, {\n      headers: {\n        'Content-type': 'application/json'\n      },\n      withCredentials: true\n    });\n    dispatch({\n      type: 'changePasswordSuccess',\n      payload: data.message\n    });\n  } catch (error) {\n    dispatch({\n      type: 'changePasswordFail',\n      payload: error.response.data.message\n    });\n  }\n};\nexport const forgetPassword = email => async dispatch => {\n  try {\n    dispatch({\n      type: 'forgetPasswordRequest'\n    });\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      },\n      withCredentials: true\n    };\n    const {\n      data\n    } = await axios.post(`${server}/forgetpassword`, {\n      email\n    }, config);\n    dispatch({\n      type: 'forgetPasswordSuccess',\n      payload: data.message\n    });\n  } catch (error) {\n    dispatch({\n      type: 'forgetPasswordFail',\n      payload: error.response.data.message\n    });\n  }\n};\nexport const resetPassword = (token, password) => async dispatch => {\n  try {\n    dispatch({\n      type: 'resetPasswordRequest'\n    });\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      },\n      withCredentials: true\n    };\n    const {\n      data\n    } = await axios.put(`${server}/resetpassword/${token}`, {\n      password\n    }, config);\n    dispatch({\n      type: 'resetPasswordSuccess',\n      payload: data.message\n    });\n  } catch (error) {\n    dispatch({\n      type: 'resetPasswordFail',\n      payload: error.response.data.message\n    });\n  }\n};\nexport const addToPlaylist = id => async dispatch => {\n  try {\n    dispatch({\n      type: 'addToPlaylistRequest'\n    });\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      },\n      withCredentials: true\n    };\n    const {\n      data\n    } = await axios.post(`${server}/addtoplaylist`, {\n      id\n    }, config);\n    dispatch({\n      type: 'addToPlaylistSuccess',\n      payload: data.message\n    });\n  } catch (error) {\n    dispatch({\n      type: 'addToPlaylistFail',\n      payload: error.response.data.message\n    });\n  }\n};\nexport const removeFromPlaylist = id => async dispatch => {\n  try {\n    dispatch({\n      type: 'removeFromPlaylistRequest'\n    });\n    const config = {\n      withCredentials: true\n    };\n    const {\n      data\n    } = await axios.delete(`${server}/removefromplaylist?id=${id}`, config);\n    dispatch({\n      type: 'removeFromPlaylistSuccess',\n      payload: data.message\n    });\n  } catch (error) {\n    dispatch({\n      type: 'removeFromPlaylistFail',\n      payload: error.response.data.message\n    });\n  }\n};","map":{"version":3,"names":["server","axios","updateProfile","name","email","dispatch","type","data","put","headers","withCredentials","payload","message","error","response","updateProfilePicture","formdata","changePassword","oldPassword","newPassword","forgetPassword","config","post","resetPassword","token","password","addToPlaylist","id","removeFromPlaylist","delete"],"sources":["C:/Users/RAHUL/OneDrive/Desktop/coursebundler-main/CourseBundler SourceCode/frontend/src/redux/actions/profile.js"],"sourcesContent":["import { server } from '../store';\r\nimport axios from 'axios';\r\n\r\nexport const updateProfile = (name, email) => async dispatch => {\r\n  try {\r\n    dispatch({ type: 'updateProfileRequest' });\r\n\r\n    const { data } = await axios.put(\r\n      `${server}/updateprofile`,\r\n      {\r\n        name,\r\n        email,\r\n      },\r\n      {\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n        },\r\n\r\n        withCredentials: true,\r\n      }\r\n    );\r\n\r\n    dispatch({ type: 'updateProfileSuccess', payload: data.message });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: 'updateProfileFail',\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateProfilePicture = formdata => async dispatch => {\r\n  try {\r\n    dispatch({ type: 'updateProfilePictureRequest' });\r\n\r\n    const { data } = await axios.put(\r\n      `${server}/updateprofilepicture`,\r\n      formdata,\r\n      {\r\n        headers: {\r\n          'Content-type': 'multipart/form-data',\r\n        },\r\n\r\n        withCredentials: true,\r\n      }\r\n    );\r\n\r\n    dispatch({ type: 'updateProfilePictureSuccess', payload: data.message });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: 'updateProfilePictureFail',\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const changePassword = (oldPassword, newPassword) => async dispatch => {\r\n  try {\r\n    dispatch({ type: 'changePasswordRequest' });\r\n\r\n    const { data } = await axios.put(\r\n      `${server}/changepassword`,\r\n      {\r\n        oldPassword,\r\n        newPassword,\r\n      },\r\n      {\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n        },\r\n\r\n        withCredentials: true,\r\n      }\r\n    );\r\n\r\n    dispatch({ type: 'changePasswordSuccess', payload: data.message });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: 'changePasswordFail',\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const forgetPassword = email => async dispatch => {\r\n  try {\r\n    dispatch({ type: 'forgetPasswordRequest' });\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n      },\r\n\r\n      withCredentials: true,\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      `${server}/forgetpassword`,\r\n      {\r\n        email,\r\n      },\r\n      config\r\n    );\r\n\r\n    dispatch({ type: 'forgetPasswordSuccess', payload: data.message });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: 'forgetPasswordFail',\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const resetPassword = (token, password) => async dispatch => {\r\n  try {\r\n    dispatch({ type: 'resetPasswordRequest' });\r\n    const config = {\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n      },\r\n\r\n      withCredentials: true,\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `${server}/resetpassword/${token}`,\r\n      {\r\n        password,\r\n      },\r\n      config\r\n    );\r\n\r\n    dispatch({ type: 'resetPasswordSuccess', payload: data.message });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: 'resetPasswordFail',\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const addToPlaylist = id => async dispatch => {\r\n  try {\r\n    dispatch({ type: 'addToPlaylistRequest' });\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n      },\r\n\r\n      withCredentials: true,\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      `${server}/addtoplaylist`,\r\n      {\r\n        id,\r\n      },\r\n      config\r\n    );\r\n\r\n    dispatch({ type: 'addToPlaylistSuccess', payload: data.message });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: 'addToPlaylistFail',\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const removeFromPlaylist = id => async dispatch => {\r\n  try {\r\n    dispatch({ type: 'removeFromPlaylistRequest' });\r\n\r\n    const config = {\r\n      withCredentials: true,\r\n    };\r\n\r\n    const { data } = await axios.delete(\r\n      `${server}/removefromplaylist?id=${id}`,\r\n      config\r\n    );\r\n\r\n    dispatch({ type: 'removeFromPlaylistSuccess', payload: data.message });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: 'removeFromPlaylistFail',\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}