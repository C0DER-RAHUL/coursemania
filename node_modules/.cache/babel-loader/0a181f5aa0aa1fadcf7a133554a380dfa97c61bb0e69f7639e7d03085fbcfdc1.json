{"ast":null,"code":"import { server } from '../store';\nimport axios from 'axios';\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: 'loginRequest'\n    });\n    const {\n      data\n    } = await axios.post(`${server}/login`, {\n      email,\n      password\n    }, {\n      headers: {\n        'Content-type': 'application/json'\n      },\n      withCredentials: true\n    });\n    dispatch({\n      type: 'loginSuccess',\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: 'loginFail',\n      payload: error.response.data.message\n    });\n  }\n};\nexport const register = formdata => async dispatch => {\n  try {\n    dispatch({\n      type: 'registerRequest'\n    });\n    const {\n      data\n    } = await axios.post(`${server}/register`, formdata, {\n      headers: {\n        'Content-type': 'multipart/form-data'\n      },\n      withCredentials: true\n    });\n    dispatch({\n      type: 'registerSuccess',\n      payload: data\n    });\n  } catch (error) {\n    // Extract error message from multiple possible sources\n    let errorMessage = 'An unknown error occurred';\n    if (error.response) {\n      // If error response exists, extract message\n      if (error.response.data) {\n        errorMessage = error.response.data.message || JSON.stringify(error.response.data);\n      } else {\n        errorMessage = error.response.statusText;\n      }\n    } else if (error.message) {\n      // Fallback to generic error message\n      errorMessage = error.message;\n    }\n    console.error('Error during registration:', error); // Log the entire error object\n    dispatch({\n      type: 'registerFail',\n      payload: errorMessage\n    });\n  }\n};\nexport const loadUser = () => async dispatch => {\n  try {\n    dispatch({\n      type: 'loadUserRequest'\n    });\n    const {\n      data\n    } = await axios.get(`${server}/me`, {\n      withCredentials: true\n    });\n    dispatch({\n      type: 'loadUserSuccess',\n      payload: data.user\n    });\n  } catch (error) {\n    dispatch({\n      type: 'loadUserFail',\n      payload: error.response.data.message\n    });\n  }\n};\nexport const logout = () => async dispatch => {\n  try {\n    dispatch({\n      type: 'logoutRequest'\n    });\n    const {\n      data\n    } = await axios.get(`${server}/logout`, {\n      withCredentials: true\n    });\n    dispatch({\n      type: 'logoutSuccess',\n      payload: data.message\n    });\n  } catch (error) {\n    dispatch({\n      type: 'logoutFail',\n      payload: error.response.data.message\n    });\n  }\n};\nexport const buySubscription = () => async dispatch => {\n  try {\n    dispatch({\n      type: 'buySubscriptionRequest'\n    });\n    const {\n      data\n    } = await axios.get(`${server}/subscribe`, {\n      withCredentials: true\n    });\n    dispatch({\n      type: 'buySubscriptionSuccess',\n      payload: data.subscriptionId\n    });\n  } catch (error) {\n    dispatch({\n      type: 'buySubscriptionFail',\n      payload: error.response.data.message\n    });\n  }\n};\nexport const cancelSubscription = () => async dispatch => {\n  try {\n    dispatch({\n      type: 'cancelSubscriptionRequest'\n    });\n    const {\n      data\n    } = await axios.delete(`${server}/subscribe/cancel`, {\n      withCredentials: true\n    });\n    dispatch({\n      type: 'cancelSubscriptionSuccess',\n      payload: data.message\n    });\n  } catch (error) {\n    dispatch({\n      type: 'cancelSubscriptionFail',\n      payload: error.response.data.message\n    });\n  }\n};","map":{"version":3,"names":["server","axios","login","email","password","dispatch","type","data","post","headers","withCredentials","payload","error","response","message","register","formdata","errorMessage","JSON","stringify","statusText","console","loadUser","get","user","logout","buySubscription","subscriptionId","cancelSubscription","delete"],"sources":["C:/Users/RAHUL/OneDrive/Desktop/coursebundler-main/CourseBundler SourceCode/frontend/src/redux/actions/user.js"],"sourcesContent":["import { server } from '../store';\r\nimport axios from 'axios';\r\n\r\nexport const login = (email, password) => async dispatch => {\r\n  try {\r\n    dispatch({ type: 'loginRequest' });\r\n\r\n    const { data } = await axios.post(\r\n      `${server}/login`,\r\n      { email, password },\r\n      {\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n        },\r\n\r\n        withCredentials: true,\r\n      }\r\n    );\r\n\r\n    dispatch({ type: 'loginSuccess', payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: 'loginFail', payload: error.response.data.message });\r\n  }\r\n};\r\n\r\n \r\n\r\nexport const register = (formdata) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: 'registerRequest' });\r\n\r\n    const { data } = await axios.post(`${server}/register`, formdata, {\r\n      headers: {\r\n        'Content-type': 'multipart/form-data',\r\n      },\r\n      withCredentials: true,\r\n    });\r\n\r\n    dispatch({ type: 'registerSuccess', payload: data });\r\n  } catch (error) {\r\n    // Extract error message from multiple possible sources\r\n    let errorMessage = 'An unknown error occurred';\r\n\r\n    if (error.response) {\r\n      // If error response exists, extract message\r\n      if (error.response.data) {\r\n        errorMessage = error.response.data.message || JSON.stringify(error.response.data);\r\n      } else {\r\n        errorMessage = error.response.statusText;\r\n      }\r\n    } else if (error.message) {\r\n      // Fallback to generic error message\r\n      errorMessage = error.message;\r\n    }\r\n\r\n    console.error('Error during registration:', error); // Log the entire error object\r\n    dispatch({ type: 'registerFail', payload: errorMessage });\r\n  }\r\n};\r\n\r\n\r\nexport const loadUser = () => async dispatch => {\r\n  try {\r\n    dispatch({ type: 'loadUserRequest' });\r\n\r\n    const { data } = await axios.get(\r\n      `${server}/me`,\r\n\r\n      {\r\n        withCredentials: true,\r\n      }\r\n    );\r\n    dispatch({ type: 'loadUserSuccess', payload: data.user });\r\n  } catch (error) {\r\n    dispatch({ type: 'loadUserFail', payload: error.response.data.message });\r\n  }\r\n};\r\n\r\nexport const logout = () => async dispatch => {\r\n  try {\r\n    dispatch({ type: 'logoutRequest' });\r\n\r\n    const { data } = await axios.get(`${server}/logout`, {\r\n      withCredentials: true,\r\n    });\r\n    dispatch({ type: 'logoutSuccess', payload: data.message });\r\n  } catch (error) {\r\n    dispatch({ type: 'logoutFail', payload: error.response.data.message });\r\n  }\r\n};\r\n\r\nexport const buySubscription = () => async dispatch => {\r\n  try {\r\n    dispatch({ type: 'buySubscriptionRequest' });\r\n\r\n    const { data } = await axios.get(`${server}/subscribe`, {\r\n      withCredentials: true,\r\n    });\r\n\r\n    dispatch({ type: 'buySubscriptionSuccess', payload: data.subscriptionId });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: 'buySubscriptionFail',\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const cancelSubscription = () => async dispatch => {\r\n  try {\r\n    dispatch({ type: 'cancelSubscriptionRequest' });\r\n\r\n    const { data } = await axios.delete(`${server}/subscribe/cancel`, {\r\n      withCredentials: true,\r\n    });\r\n\r\n    dispatch({ type: 'cancelSubscriptionSuccess', payload: data.message });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: 'cancelSubscriptionFail',\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}