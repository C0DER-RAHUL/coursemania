{"ast":null,"code":"import{Button,Container,Heading,Input,VStack}from'@chakra-ui/react';import React,{useEffect,useState}from'react';import toast from'react-hot-toast';import{useDispatch,useSelector}from'react-redux';import{useNavigate,useParams}from'react-router-dom';import{resetPassword}from'../../redux/actions/profile';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ResetPassword=()=>{const[password,setPassword]=useState('');const params=useParams();const navigate=useNavigate();const{loading,message,error}=useSelector(state=>state.profile);const dispatch=useDispatch();const submitHandler=e=>{e.preventDefault();dispatch(resetPassword(params.token,password));};useEffect(()=>{if(error){toast.error(error);dispatch({type:'clearError'});}if(message){toast.success(message);dispatch({type:'clearMessage'});navigate('/login');}},[dispatch,error,message]);return/*#__PURE__*/_jsx(Container,{py:'16',h:\"90vh\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:submitHandler,children:[/*#__PURE__*/_jsx(Heading,{children:\"Reset Password\",my:\"16\",textTransform:'uppercase',textAlign:['center','left']}),/*#__PURE__*/_jsxs(VStack,{spacing:'8',children:[/*#__PURE__*/_jsx(Input,{required:true,value:password,onChange:e=>setPassword(e.target.value),placeholder:\"New Password\",type:'password',focusBorderColor:\"yellow.500\"}),/*#__PURE__*/_jsx(Button,{isLoading:loading,type:\"submit\",w:'full',colorScheme:\"yellow\",children:\"Reset Password\"})]})]})});};export default ResetPassword;","map":{"version":3,"names":["Button","Container","Heading","Input","VStack","React","useEffect","useState","toast","useDispatch","useSelector","useNavigate","useParams","resetPassword","jsx","_jsx","jsxs","_jsxs","ResetPassword","password","setPassword","params","navigate","loading","message","error","state","profile","dispatch","submitHandler","e","preventDefault","token","type","success","py","h","children","onSubmit","my","textTransform","textAlign","spacing","required","value","onChange","target","placeholder","focusBorderColor","isLoading","w","colorScheme"],"sources":["C:/Users/RAHUL/Desktop/coursebundler-main/CourseBundler SourceCode/frontend/src/components/Auth/ResetPassword.jsx"],"sourcesContent":["import { Button, Container, Heading, Input, VStack } from '@chakra-ui/react';\r\nimport React, { useEffect, useState } from 'react';\r\nimport toast from 'react-hot-toast';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { resetPassword } from '../../redux/actions/profile';\r\n\r\nconst ResetPassword = () => {\r\n  const [password, setPassword] = useState('');\r\n\r\n  const params = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const { loading, message, error } = useSelector(state => state.profile);\r\n\r\n  const dispatch = useDispatch();\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    dispatch(resetPassword(params.token, password));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      toast.error(error);\r\n      dispatch({ type: 'clearError' });\r\n    }\r\n    if (message) {\r\n      toast.success(message);\r\n      dispatch({ type: 'clearMessage' });\r\n      navigate('/login');\r\n    }\r\n  }, [dispatch, error, message]);\r\n\r\n  return (\r\n    <Container py={'16'} h=\"90vh\">\r\n      <form onSubmit={submitHandler}>\r\n        <Heading\r\n          children=\"Reset Password\"\r\n          my=\"16\"\r\n          textTransform={'uppercase'}\r\n          textAlign={['center', 'left']}\r\n        />\r\n\r\n        <VStack spacing={'8'}>\r\n          <Input\r\n            required\r\n            value={password}\r\n            onChange={e => setPassword(e.target.value)}\r\n            placeholder=\"New Password\"\r\n            type={'password'}\r\n            focusBorderColor=\"yellow.500\"\r\n          />\r\n\r\n          <Button\r\n            isLoading={loading}\r\n            type=\"submit\"\r\n            w={'full'}\r\n            colorScheme=\"yellow\"\r\n          >\r\n            Reset Password\r\n          </Button>\r\n        </VStack>\r\n      </form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"mappings":"AAAA,OAASA,MAAM,CAAEC,SAAS,CAAEC,OAAO,CAAEC,KAAK,CAAEC,MAAM,KAAQ,kBAAkB,CAC5E,MAAO,CAAAC,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,CAAAC,KAAK,KAAM,iBAAiB,CACnC,OAASC,WAAW,CAAEC,WAAW,KAAQ,aAAa,CACtD,OAASC,WAAW,CAAEC,SAAS,KAAQ,kBAAkB,CACzD,OAASC,aAAa,KAAQ,6BAA6B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE5D,KAAM,CAAAC,aAAa,CAAGA,CAAA,GAAM,CAC1B,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CAE5C,KAAM,CAAAc,MAAM,CAAGT,SAAS,CAAC,CAAC,CAC1B,KAAM,CAAAU,QAAQ,CAAGX,WAAW,CAAC,CAAC,CAE9B,KAAM,CAAEY,OAAO,CAAEC,OAAO,CAAEC,KAAM,CAAC,CAAGf,WAAW,CAACgB,KAAK,EAAIA,KAAK,CAACC,OAAO,CAAC,CAEvE,KAAM,CAAAC,QAAQ,CAAGnB,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAAoB,aAAa,CAAGC,CAAC,EAAI,CACzBA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClBH,QAAQ,CAACf,aAAa,CAACQ,MAAM,CAACW,KAAK,CAAEb,QAAQ,CAAC,CAAC,CACjD,CAAC,CAEDb,SAAS,CAAC,IAAM,CACd,GAAImB,KAAK,CAAE,CACTjB,KAAK,CAACiB,KAAK,CAACA,KAAK,CAAC,CAClBG,QAAQ,CAAC,CAAEK,IAAI,CAAE,YAAa,CAAC,CAAC,CAClC,CACA,GAAIT,OAAO,CAAE,CACXhB,KAAK,CAAC0B,OAAO,CAACV,OAAO,CAAC,CACtBI,QAAQ,CAAC,CAAEK,IAAI,CAAE,cAAe,CAAC,CAAC,CAClCX,QAAQ,CAAC,QAAQ,CAAC,CACpB,CACF,CAAC,CAAE,CAACM,QAAQ,CAAEH,KAAK,CAAED,OAAO,CAAC,CAAC,CAE9B,mBACET,IAAA,CAACd,SAAS,EAACkC,EAAE,CAAE,IAAK,CAACC,CAAC,CAAC,MAAM,CAAAC,QAAA,cAC3BpB,KAAA,SAAMqB,QAAQ,CAAET,aAAc,CAAAQ,QAAA,eAC5BtB,IAAA,CAACb,OAAO,EACNmC,QAAQ,CAAC,gBAAgB,CACzBE,EAAE,CAAC,IAAI,CACPC,aAAa,CAAE,WAAY,CAC3BC,SAAS,CAAE,CAAC,QAAQ,CAAE,MAAM,CAAE,CAC/B,CAAC,cAEFxB,KAAA,CAACb,MAAM,EAACsC,OAAO,CAAE,GAAI,CAAAL,QAAA,eACnBtB,IAAA,CAACZ,KAAK,EACJwC,QAAQ,MACRC,KAAK,CAAEzB,QAAS,CAChB0B,QAAQ,CAAEf,CAAC,EAAIV,WAAW,CAACU,CAAC,CAACgB,MAAM,CAACF,KAAK,CAAE,CAC3CG,WAAW,CAAC,cAAc,CAC1Bd,IAAI,CAAE,UAAW,CACjBe,gBAAgB,CAAC,YAAY,CAC9B,CAAC,cAEFjC,IAAA,CAACf,MAAM,EACLiD,SAAS,CAAE1B,OAAQ,CACnBU,IAAI,CAAC,QAAQ,CACbiB,CAAC,CAAE,MAAO,CACVC,WAAW,CAAC,QAAQ,CAAAd,QAAA,CACrB,gBAED,CAAQ,CAAC,EACH,CAAC,EACL,CAAC,CACE,CAAC,CAEhB,CAAC,CAED,cAAe,CAAAnB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}