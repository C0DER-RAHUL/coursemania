{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RAHUL\\\\Desktop\\\\coursebundler-main\\\\CourseBundler SourceCode\\\\frontend\\\\src\\\\components\\\\Profile\\\\UpdateProfile.jsx\",\n  _s = $RefreshSig$();\nimport { Button, Container, Heading, Input, VStack } from '@chakra-ui/react';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { updateProfile } from '../../redux/actions/profile';\nimport { loadUser } from '../../redux/actions/user';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateProfile = ({\n  user\n}) => {\n  _s();\n  const [name, setName] = useState(user.name);\n  const [email, setEmail] = useState(user.email);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const submitHandler = async e => {\n    e.preventDefault();\n    await dispatch(updateProfile(name, email));\n    dispatch(loadUser());\n    navigate('/profile');\n  };\n  const {\n    loading\n  } = useSelector(state => state.profile);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    py: \"16\",\n    minH: '90vh',\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        textTransform: 'uppercase',\n        children: \"Update Profile\",\n        my: \"16\",\n        textAlign: ['center', 'left']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(VStack, {\n        spacing: '8',\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          value: name,\n          onChange: e => setName(e.target.value),\n          placeholder: \"Name\",\n          type: 'text',\n          focusBorderColor: \"yellow.500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), ' ', /*#__PURE__*/_jsxDEV(Input, {\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          placeholder: \"Email\",\n          type: 'email',\n          focusBorderColor: \"yellow.500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          isLoading: loading,\n          w: \"full\",\n          colorScheme: 'yellow',\n          type: \"submit\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateProfile, \"/QcF/g5bAwtbSETY3/QsvWaZWzA=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n_c = UpdateProfile;\nexport default UpdateProfile;\nvar _c;\n$RefreshReg$(_c, \"UpdateProfile\");","map":{"version":3,"names":["Button","Container","Heading","Input","VStack","React","useState","useDispatch","useSelector","useNavigate","updateProfile","loadUser","jsxDEV","_jsxDEV","UpdateProfile","user","_s","name","setName","email","setEmail","navigate","dispatch","submitHandler","e","preventDefault","loading","state","profile","py","minH","children","onSubmit","textTransform","my","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","spacing","value","onChange","target","placeholder","type","focusBorderColor","isLoading","w","colorScheme","_c","$RefreshReg$"],"sources":["C:/Users/RAHUL/Desktop/coursebundler-main/CourseBundler SourceCode/frontend/src/components/Profile/UpdateProfile.jsx"],"sourcesContent":["import { Button, Container, Heading, Input, VStack } from '@chakra-ui/react';\r\nimport React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { updateProfile } from '../../redux/actions/profile';\r\nimport { loadUser } from '../../redux/actions/user';\r\n\r\nconst UpdateProfile = ({ user }) => {\r\n  const [name, setName] = useState(user.name);\r\n  const [email, setEmail] = useState(user.email);\r\n\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const submitHandler = async e => {\r\n    e.preventDefault();\r\n    await dispatch(updateProfile(name, email));\r\n    dispatch(loadUser());\r\n    navigate('/profile');\r\n  };\r\n\r\n  const { loading } = useSelector(state => state.profile);\r\n  return (\r\n    <Container py=\"16\" minH={'90vh'}>\r\n      <form onSubmit={submitHandler}>\r\n        <Heading\r\n          textTransform={'uppercase'}\r\n          children=\"Update Profile\"\r\n          my=\"16\"\r\n          textAlign={['center', 'left']}\r\n        />\r\n\r\n        <VStack spacing={'8'}>\r\n          <Input\r\n            value={name}\r\n            onChange={e => setName(e.target.value)}\r\n            placeholder=\"Name\"\r\n            type={'text'}\r\n            focusBorderColor=\"yellow.500\"\r\n          />{' '}\r\n          <Input\r\n            value={email}\r\n            onChange={e => setEmail(e.target.value)}\r\n            placeholder=\"Email\"\r\n            type={'email'}\r\n            focusBorderColor=\"yellow.500\"\r\n          />\r\n          <Button\r\n            isLoading={loading}\r\n            w=\"full\"\r\n            colorScheme={'yellow'}\r\n            type=\"submit\"\r\n          >\r\n            Update\r\n          </Button>\r\n        </VStack>\r\n      </form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default UpdateProfile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}