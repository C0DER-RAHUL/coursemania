{"ast":null,"code":"import{Button,Container,Heading,Input,VStack}from'@chakra-ui/react';import React,{useState}from'react';import{useDispatch,useSelector}from'react-redux';import{useNavigate}from'react-router-dom';import{updateProfile}from'../../redux/actions/profile';import{loadUser}from'../../redux/actions/user';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const UpdateProfile=_ref=>{let{user}=_ref;const[name,setName]=useState(user.name);const[email,setEmail]=useState(user.email);const navigate=useNavigate();const dispatch=useDispatch();const submitHandler=async e=>{e.preventDefault();await dispatch(updateProfile(name,email));dispatch(loadUser());navigate('/profile');};const{loading}=useSelector(state=>state.profile);return/*#__PURE__*/_jsx(Container,{py:\"16\",minH:'90vh',children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:submitHandler,children:[/*#__PURE__*/_jsx(Heading,{textTransform:'uppercase',children:\"Update Profile\",my:\"16\",textAlign:['center','left']}),/*#__PURE__*/_jsxs(VStack,{spacing:'8',children:[/*#__PURE__*/_jsx(Input,{value:name,onChange:e=>setName(e.target.value),placeholder:\"Name\",type:'text',focusBorderColor:\"yellow.500\"}),' ',/*#__PURE__*/_jsx(Input,{value:email,onChange:e=>setEmail(e.target.value),placeholder:\"Email\",type:'email',focusBorderColor:\"yellow.500\"}),/*#__PURE__*/_jsx(Button,{isLoading:loading,w:\"full\",colorScheme:'yellow',type:\"submit\",children:\"Update\"})]})]})});};export default UpdateProfile;","map":{"version":3,"names":["Button","Container","Heading","Input","VStack","React","useState","useDispatch","useSelector","useNavigate","updateProfile","loadUser","jsx","_jsx","jsxs","_jsxs","UpdateProfile","_ref","user","name","setName","email","setEmail","navigate","dispatch","submitHandler","e","preventDefault","loading","state","profile","py","minH","children","onSubmit","textTransform","my","textAlign","spacing","value","onChange","target","placeholder","type","focusBorderColor","isLoading","w","colorScheme"],"sources":["C:/Users/RAHUL/OneDrive/Desktop/coursebundler-main/CourseBundler SourceCode/frontend/src/components/Profile/UpdateProfile.jsx"],"sourcesContent":["import { Button, Container, Heading, Input, VStack } from '@chakra-ui/react';\r\nimport React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { updateProfile } from '../../redux/actions/profile';\r\nimport { loadUser } from '../../redux/actions/user';\r\n\r\nconst UpdateProfile = ({ user }) => {\r\n  const [name, setName] = useState(user.name);\r\n  const [email, setEmail] = useState(user.email);\r\n\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const submitHandler = async e => {\r\n    e.preventDefault();\r\n    await dispatch(updateProfile(name, email));\r\n    dispatch(loadUser());\r\n    navigate('/profile');\r\n  };\r\n\r\n  const { loading } = useSelector(state => state.profile);\r\n  return (\r\n    <Container py=\"16\" minH={'90vh'}>\r\n      <form onSubmit={submitHandler}>\r\n        <Heading\r\n          textTransform={'uppercase'}\r\n          children=\"Update Profile\"\r\n          my=\"16\"\r\n          textAlign={['center', 'left']}\r\n        />\r\n\r\n        <VStack spacing={'8'}>\r\n          <Input\r\n            value={name}\r\n            onChange={e => setName(e.target.value)}\r\n            placeholder=\"Name\"\r\n            type={'text'}\r\n            focusBorderColor=\"yellow.500\"\r\n          />{' '}\r\n          <Input\r\n            value={email}\r\n            onChange={e => setEmail(e.target.value)}\r\n            placeholder=\"Email\"\r\n            type={'email'}\r\n            focusBorderColor=\"yellow.500\"\r\n          />\r\n          <Button\r\n            isLoading={loading}\r\n            w=\"full\"\r\n            colorScheme={'yellow'}\r\n            type=\"submit\"\r\n          >\r\n            Update\r\n          </Button>\r\n        </VStack>\r\n      </form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default UpdateProfile;\r\n"],"mappings":"AAAA,OAASA,MAAM,CAAEC,SAAS,CAAEC,OAAO,CAAEC,KAAK,CAAEC,MAAM,KAAQ,kBAAkB,CAC5E,MAAO,CAAAC,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,WAAW,CAAEC,WAAW,KAAQ,aAAa,CACtD,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,OAASC,aAAa,KAAQ,6BAA6B,CAC3D,OAASC,QAAQ,KAAQ,0BAA0B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEpD,KAAM,CAAAC,aAAa,CAAGC,IAAA,EAAc,IAAb,CAAEC,IAAK,CAAC,CAAAD,IAAA,CAC7B,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGd,QAAQ,CAACY,IAAI,CAACC,IAAI,CAAC,CAC3C,KAAM,CAACE,KAAK,CAAEC,QAAQ,CAAC,CAAGhB,QAAQ,CAACY,IAAI,CAACG,KAAK,CAAC,CAE9C,KAAM,CAAAE,QAAQ,CAAGd,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAAe,QAAQ,CAAGjB,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAAkB,aAAa,CAAG,KAAM,CAAAC,CAAC,EAAI,CAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB,KAAM,CAAAH,QAAQ,CAACd,aAAa,CAACS,IAAI,CAAEE,KAAK,CAAC,CAAC,CAC1CG,QAAQ,CAACb,QAAQ,CAAC,CAAC,CAAC,CACpBY,QAAQ,CAAC,UAAU,CAAC,CACtB,CAAC,CAED,KAAM,CAAEK,OAAQ,CAAC,CAAGpB,WAAW,CAACqB,KAAK,EAAIA,KAAK,CAACC,OAAO,CAAC,CACvD,mBACEjB,IAAA,CAACZ,SAAS,EAAC8B,EAAE,CAAC,IAAI,CAACC,IAAI,CAAE,MAAO,CAAAC,QAAA,cAC9BlB,KAAA,SAAMmB,QAAQ,CAAET,aAAc,CAAAQ,QAAA,eAC5BpB,IAAA,CAACX,OAAO,EACNiC,aAAa,CAAE,WAAY,CAC3BF,QAAQ,CAAC,gBAAgB,CACzBG,EAAE,CAAC,IAAI,CACPC,SAAS,CAAE,CAAC,QAAQ,CAAE,MAAM,CAAE,CAC/B,CAAC,cAEFtB,KAAA,CAACX,MAAM,EAACkC,OAAO,CAAE,GAAI,CAAAL,QAAA,eACnBpB,IAAA,CAACV,KAAK,EACJoC,KAAK,CAAEpB,IAAK,CACZqB,QAAQ,CAAEd,CAAC,EAAIN,OAAO,CAACM,CAAC,CAACe,MAAM,CAACF,KAAK,CAAE,CACvCG,WAAW,CAAC,MAAM,CAClBC,IAAI,CAAE,MAAO,CACbC,gBAAgB,CAAC,YAAY,CAC9B,CAAC,CAAC,GAAG,cACN/B,IAAA,CAACV,KAAK,EACJoC,KAAK,CAAElB,KAAM,CACbmB,QAAQ,CAAEd,CAAC,EAAIJ,QAAQ,CAACI,CAAC,CAACe,MAAM,CAACF,KAAK,CAAE,CACxCG,WAAW,CAAC,OAAO,CACnBC,IAAI,CAAE,OAAQ,CACdC,gBAAgB,CAAC,YAAY,CAC9B,CAAC,cACF/B,IAAA,CAACb,MAAM,EACL6C,SAAS,CAAEjB,OAAQ,CACnBkB,CAAC,CAAC,MAAM,CACRC,WAAW,CAAE,QAAS,CACtBJ,IAAI,CAAC,QAAQ,CAAAV,QAAA,CACd,QAED,CAAQ,CAAC,EACH,CAAC,EACL,CAAC,CACE,CAAC,CAEhB,CAAC,CAED,cAAe,CAAAjB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}