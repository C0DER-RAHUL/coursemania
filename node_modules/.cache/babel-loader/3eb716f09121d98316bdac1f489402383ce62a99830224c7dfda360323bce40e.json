{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RAHUL\\\\OneDrive\\\\Desktop\\\\coursebundler-main\\\\CourseBundler SourceCode\\\\frontend\\\\src\\\\components\\\\Admin\\\\Dashboard\\\\Chart.js\";\nimport React from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, ArcElement, Legend } from 'chart.js';\nimport { Line, Doughnut } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, ArcElement, Legend);\nexport const LineChart = ({\n  views = []\n}) => {\n  const labels = getLastYearMonths();\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'bottom'\n      },\n      title: {\n        display: true,\n        text: 'Yearly Views'\n      }\n    }\n  };\n  const data = {\n    labels,\n    datasets: [{\n      label: 'Views',\n      data: views,\n      borderColor: 'rgba(107,70,193,0.5)',\n      backgroundColor: '#6b46c1'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Line, {\n    options: options,\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 10\n  }, this);\n};\n_c = LineChart;\nexport const DoughnutChart = ({\n  users = []\n}) => {\n  const data = {\n    labels: ['Subscribed', 'Not Subscribed'],\n    datasets: [{\n      label: 'Views',\n      data: users,\n      borderColor: ['rgb(62,12,171)', 'rgb(214,43,129)'],\n      backgroundColor: ['rgba(62,12,171,0.3)', 'rgba(214,43,129,0.3)'],\n      borderWidth: 1\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Doughnut, {\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 10\n  }, this);\n};\n_c2 = DoughnutChart;\nfunction getLastYearMonths() {\n  const labels = [];\n  const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  const currentMonth = new Date().getMonth();\n  const remain = 11 - currentMonth;\n  for (let i = currentMonth; i < months.length; i--) {\n    const element = months[i];\n    labels.unshift(element);\n    if (i === 0) break;\n  }\n  for (let i = 11; i > remain; i--) {\n    if (i === currentMonth) break;\n    const element = months[i];\n    labels.unshift(element);\n  }\n  return labels;\n}\nvar _c, _c2;\n$RefreshReg$(_c, \"LineChart\");\n$RefreshReg$(_c2, \"DoughnutChart\");","map":{"version":3,"names":["React","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","ArcElement","Legend","Line","Doughnut","jsxDEV","_jsxDEV","register","LineChart","views","labels","getLastYearMonths","options","responsive","plugins","legend","position","title","display","text","data","datasets","label","borderColor","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","DoughnutChart","users","borderWidth","_c2","months","currentMonth","Date","getMonth","remain","i","length","element","unshift","$RefreshReg$"],"sources":["C:/Users/RAHUL/OneDrive/Desktop/coursebundler-main/CourseBundler SourceCode/frontend/src/components/Admin/Dashboard/Chart.js"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  ArcElement,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { Line, Doughnut } from 'react-chartjs-2';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  ArcElement,\r\n  Legend\r\n);\r\n\r\nexport const LineChart = ({ views = [] }) => {\r\n  const labels = getLastYearMonths();\r\n\r\n  const options = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'bottom',\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Yearly Views',\r\n      },\r\n    },\r\n  };\r\n\r\n  const data = {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        label: 'Views',\r\n        data: views,\r\n        borderColor: 'rgba(107,70,193,0.5)',\r\n        backgroundColor: '#6b46c1',\r\n      },\r\n    ],\r\n  };\r\n\r\n  return <Line options={options} data={data} />;\r\n};\r\n\r\nexport const DoughnutChart = ({ users = [] }) => {\r\n  const data = {\r\n    labels: ['Subscribed', 'Not Subscribed'],\r\n    datasets: [\r\n      {\r\n        label: 'Views',\r\n        data: users,\r\n        borderColor: ['rgb(62,12,171)', 'rgb(214,43,129)'],\r\n        backgroundColor: ['rgba(62,12,171,0.3)', 'rgba(214,43,129,0.3)'],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return <Doughnut data={data} />;\r\n};\r\n\r\nfunction getLastYearMonths() {\r\n  const labels = [];\r\n\r\n  const months = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December',\r\n  ];\r\n\r\n  const currentMonth = new Date().getMonth();\r\n\r\n  const remain = 11 - currentMonth;\r\n\r\n  for (let i = currentMonth; i < months.length; i--) {\r\n    const element = months[i];\r\n    labels.unshift(element);\r\n    if (i === 0) break;\r\n  }\r\n\r\n  for (let i = 11; i > remain; i--) {\r\n    if (i === currentMonth) break;\r\n    const element = months[i];\r\n    labels.unshift(element);\r\n  }\r\n\r\n  return labels;\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}