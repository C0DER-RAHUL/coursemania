{"ast":null,"code":"import{server}from'../store';import axios from'axios';export const updateProfile=(name,email)=>async dispatch=>{try{dispatch({type:'updateProfileRequest'});const{data}=await axios.put(\"\".concat(server,\"/updateprofile\"),{name,email},{headers:{'Content-type':'application/json'},withCredentials:true});dispatch({type:'updateProfileSuccess',payload:data.message});}catch(error){dispatch({type:'updateProfileFail',payload:error.response.data.message});}};export const updateProfilePicture=formdata=>async dispatch=>{try{dispatch({type:'updateProfilePictureRequest'});const{data}=await axios.put(\"\".concat(server,\"/updateprofilepicture\"),formdata,{headers:{'Content-type':'multipart/form-data'},withCredentials:true});dispatch({type:'updateProfilePictureSuccess',payload:data.message});}catch(error){dispatch({type:'updateProfilePictureFail',payload:error.response.data.message});}};export const changePassword=(oldPassword,newPassword)=>async dispatch=>{try{dispatch({type:'changePasswordRequest'});const{data}=await axios.put(\"\".concat(server,\"/changepassword\"),{oldPassword,newPassword},{headers:{'Content-type':'application/json'},withCredentials:true});dispatch({type:'changePasswordSuccess',payload:data.message});}catch(error){dispatch({type:'changePasswordFail',payload:error.response.data.message});}};export const forgetPassword=email=>async dispatch=>{try{dispatch({type:'forgetPasswordRequest'});const config={headers:{'Content-type':'application/json'},withCredentials:true};const{data}=await axios.post(\"\".concat(server,\"/forgetpassword\"),{email},config);dispatch({type:'forgetPasswordSuccess',payload:data.message});}catch(error){dispatch({type:'forgetPasswordFail',payload:error.response.data.message});}};export const resetPassword=(token,password)=>async dispatch=>{try{dispatch({type:'resetPasswordRequest'});const config={headers:{'Content-type':'application/json'},withCredentials:true};const{data}=await axios.put(\"\".concat(server,\"/resetpassword/\").concat(token),{password},config);dispatch({type:'resetPasswordSuccess',payload:data.message});}catch(error){dispatch({type:'resetPasswordFail',payload:error.response.data.message});}};export const addToPlaylist=id=>async dispatch=>{try{dispatch({type:'addToPlaylistRequest'});const config={headers:{'Content-type':'application/json'},withCredentials:true};const{data}=await axios.post(\"\".concat(server,\"/addtoplaylist\"),{id},config);dispatch({type:'addToPlaylistSuccess',payload:data.message});}catch(error){dispatch({type:'addToPlaylistFail',payload:error.response.data.message});}};export const removeFromPlaylist=id=>async dispatch=>{try{dispatch({type:'removeFromPlaylistRequest'});const config={withCredentials:true};const{data}=await axios.delete(\"\".concat(server,\"/removefromplaylist?id=\").concat(id),config);dispatch({type:'removeFromPlaylistSuccess',payload:data.message});}catch(error){dispatch({type:'removeFromPlaylistFail',payload:error.response.data.message});}};","map":{"version":3,"names":["server","axios","updateProfile","name","email","dispatch","type","data","put","concat","headers","withCredentials","payload","message","error","response","updateProfilePicture","formdata","changePassword","oldPassword","newPassword","forgetPassword","config","post","resetPassword","token","password","addToPlaylist","id","removeFromPlaylist","delete"],"sources":["C:/Users/RAHUL/Desktop/coursebundler-main/CourseBundler SourceCode/frontend/src/redux/actions/profile.js"],"sourcesContent":["import { server } from '../store';\r\nimport axios from 'axios';\r\n\r\nexport const updateProfile = (name, email) => async dispatch => {\r\n  try {\r\n    dispatch({ type: 'updateProfileRequest' });\r\n\r\n    const { data } = await axios.put(\r\n      `${server}/updateprofile`,\r\n      {\r\n        name,\r\n        email,\r\n      },\r\n      {\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n        },\r\n\r\n        withCredentials: true,\r\n      }\r\n    );\r\n\r\n    dispatch({ type: 'updateProfileSuccess', payload: data.message });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: 'updateProfileFail',\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateProfilePicture = formdata => async dispatch => {\r\n  try {\r\n    dispatch({ type: 'updateProfilePictureRequest' });\r\n\r\n    const { data } = await axios.put(\r\n      `${server}/updateprofilepicture`,\r\n      formdata,\r\n      {\r\n        headers: {\r\n          'Content-type': 'multipart/form-data',\r\n        },\r\n\r\n        withCredentials: true,\r\n      }\r\n    );\r\n\r\n    dispatch({ type: 'updateProfilePictureSuccess', payload: data.message });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: 'updateProfilePictureFail',\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const changePassword = (oldPassword, newPassword) => async dispatch => {\r\n  try {\r\n    dispatch({ type: 'changePasswordRequest' });\r\n\r\n    const { data } = await axios.put(\r\n      `${server}/changepassword`,\r\n      {\r\n        oldPassword,\r\n        newPassword,\r\n      },\r\n      {\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n        },\r\n\r\n        withCredentials: true,\r\n      }\r\n    );\r\n\r\n    dispatch({ type: 'changePasswordSuccess', payload: data.message });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: 'changePasswordFail',\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const forgetPassword = email => async dispatch => {\r\n  try {\r\n    dispatch({ type: 'forgetPasswordRequest' });\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n      },\r\n\r\n      withCredentials: true,\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      `${server}/forgetpassword`,\r\n      {\r\n        email,\r\n      },\r\n      config\r\n    );\r\n\r\n    dispatch({ type: 'forgetPasswordSuccess', payload: data.message });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: 'forgetPasswordFail',\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const resetPassword = (token, password) => async dispatch => {\r\n  try {\r\n    dispatch({ type: 'resetPasswordRequest' });\r\n    const config = {\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n      },\r\n\r\n      withCredentials: true,\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `${server}/resetpassword/${token}`,\r\n      {\r\n        password,\r\n      },\r\n      config\r\n    );\r\n\r\n    dispatch({ type: 'resetPasswordSuccess', payload: data.message });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: 'resetPasswordFail',\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const addToPlaylist = id => async dispatch => {\r\n  try {\r\n    dispatch({ type: 'addToPlaylistRequest' });\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n      },\r\n\r\n      withCredentials: true,\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      `${server}/addtoplaylist`,\r\n      {\r\n        id,\r\n      },\r\n      config\r\n    );\r\n\r\n    dispatch({ type: 'addToPlaylistSuccess', payload: data.message });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: 'addToPlaylistFail',\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const removeFromPlaylist = id => async dispatch => {\r\n  try {\r\n    dispatch({ type: 'removeFromPlaylistRequest' });\r\n\r\n    const config = {\r\n      withCredentials: true,\r\n    };\r\n\r\n    const { data } = await axios.delete(\r\n      `${server}/removefromplaylist?id=${id}`,\r\n      config\r\n    );\r\n\r\n    dispatch({ type: 'removeFromPlaylistSuccess', payload: data.message });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: 'removeFromPlaylistFail',\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}